<template>
  <div class="{{FEAT_NAME}}-card">
    <el-card
      :class="cardClass"
      :shadow="shadow"
      @click="handleClick"
    >
      <!-- 卡片头部 -->
      <template #header>
        <div class="card-header">
          <div class="header-left">
            <h3 class="card-title">{{ {{ENTITY_NAME_LOWER}}.name }}</h3>
            <el-tag
              :type="statusTagType"
              size="small"
              class="status-tag"
            >
              {{ statusText }}
            </el-tag>
          </div>

          <div class="header-actions" @click.stop>
            <slot name="actions">
              <el-dropdown @command="handleCommand">
                <el-button type="text" size="small">
                  <el-icon><MoreFilled /></el-icon>
                </el-button>
                <template #dropdown>
                  <el-dropdown-menu>
                    <el-dropdown-item command="view">查看详情</el-dropdown-item>
                    <el-dropdown-item command="edit">编辑</el-dropdown-item>
                    <el-dropdown-item command="delete" divided>删除</el-dropdown-item>
                  </el-dropdown-menu>
                </template>
              </el-dropdown>
            </slot>
          </div>
        </div>
      </template>

      <!-- 卡片内容 -->
      <div class="card-content">
        <!-- 描述信息 -->
        <div v-if="{{ENTITY_NAME_LOWER}}.description" class="description">
          <p>{{ {{ENTITY_NAME_LOWER}}.description }}</p>
        </div>

        <!-- 自定义内容插槽 -->
        <div class="custom-content">
          <slot name="content" :{{ENTITY_NAME_LOWER}}="{{ENTITY_NAME_LOWER}}">
            <!-- 默认内容 -->
            <div class="default-info">
              <div class="info-item">
                <span class="label">创建时间:</span>
                <span class="value">{{ formatDateTime({{ENTITY_NAME_LOWER}}.createdAt) }}</span>
              </div>
              <div class="info-item">
                <span class="label">更新时间:</span>
                <span class="value">{{ formatDateTime({{ENTITY_NAME_LOWER}}.updatedAt) }}</span>
              </div>
            </div>
          </slot>
        </div>
      </div>

      <!-- 卡片底部 -->
      <template #footer>
        <div class="card-footer">
          <slot name="footer" :{{ENTITY_NAME_LOWER}}="{{ENTITY_NAME_LOWER}}">
            <div class="footer-actions">
              <el-button size="small" @click.stop="$emit('view', {{ENTITY_NAME_LOWER}})">
                查看
              </el-button>
              <el-button size="small" type="primary" @click.stop="$emit('edit', {{ENTITY_NAME_LOWER}})">
                编辑
              </el-button>
            </div>
          </slot>
        </div>
      </template>
    </el-card>
  </div>
</template>

<script setup lang="ts">
/**
 * {{CHINESE_NAME}}卡片组件
 * 用于展示{{CHINESE_NAME}}信息的卡片组件，支持自定义内容和操作
 *
 * @author AI Generator
 * @date {{CURRENT_DATE}}
 */

import { computed } from 'vue'
import { MoreFilled } from '@element-plus/icons-vue'
import type { {{ENTITY_NAME}} } from '../api/{{FEAT_NAME}}.service'

/**
 * 组件属性定义
 */
export interface Props {
  /** {{CHINESE_NAME}}数据 */
  {{ENTITY_NAME_LOWER}}: {{ENTITY_NAME}}
  /** 是否可点击 */
  clickable?: boolean
  /** 卡片阴影 */
  shadow?: 'always' | 'hover' | 'never'
  /** 是否选中 */
  selected?: boolean
}

/**
 * 组件事件定义
 */
export interface Emits {
  /** 点击卡片事件 */
  click: [{{ENTITY_NAME_LOWER}}: {{ENTITY_NAME}}]
  /** 查看事件 */
  view: [{{ENTITY_NAME_LOWER}}: {{ENTITY_NAME}}]
  /** 编辑事件 */
  edit: [{{ENTITY_NAME_LOWER}}: {{ENTITY_NAME}}]
  /** 删除事件 */
  delete: [{{ENTITY_NAME_LOWER}}: {{ENTITY_NAME}}]
  /** 命令事件 */
  command: [command: string, {{ENTITY_NAME_LOWER}}: {{ENTITY_NAME}}]
}

// 定义属性和事件
const props = withDefaults(defineProps<Props>(), {
  clickable: true,
  shadow: 'hover',
  selected: false
})

const emit = defineEmits<Emits>()

/**
 * 卡片样式类
 */
const cardClass = computed(() => ({
  'clickable': props.clickable,
  'selected': props.selected
}))

/**
 * 状态标签类型
 */
const statusTagType = computed(() => {
  const typeMap = {
    active: 'success',
    inactive: 'info',
    pending: 'warning'
  }
  return typeMap[props.{{ENTITY_NAME_LOWER}}.status] || 'info'
})

/**
 * 状态文本
 */
const statusText = computed(() => {
  const textMap = {
    active: '活跃',
    inactive: '未激活',
    pending: '待处理'
  }
  return textMap[props.{{ENTITY_NAME_LOWER}}.status] || props.{{ENTITY_NAME_LOWER}}.status
})

/**
 * 格式化日期时间
 */
function formatDateTime(dateTime: string) {
  return new Date(dateTime).toLocaleString('zh-CN')
}

/**
 * 处理卡片点击
 */
function handleClick() {
  if (props.clickable) {
    emit('click', props.{{ENTITY_NAME_LOWER}})
  }
}

/**
 * 处理下拉菜单命令
 */
function handleCommand(command: string) {
  switch (command) {
    case 'view':
      emit('view', props.{{ENTITY_NAME_LOWER}})
      break
    case 'edit':
      emit('edit', props.{{ENTITY_NAME_LOWER}})
      break
    case 'delete':
      emit('delete', props.{{ENTITY_NAME_LOWER}})
      break
    default:
      emit('command', command, props.{{ENTITY_NAME_LOWER}})
  }
}
</script>

<style scoped lang="scss">
.{{FEAT_NAME}}-card {
  .el-card {
    transition: all 0.3s ease;

    &.clickable {
      cursor: pointer;

      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      }
    }

    &.selected {
      border-color: var(--el-color-primary);
      box-shadow: 0 0 0 2px var(--el-color-primary-light-8);
    }
  }

  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;

    .header-left {
      flex: 1;
      min-width: 0;

      .card-title {
        margin: 0 0 8px 0;
        font-size: 16px;
        font-weight: 600;
        color: #303133;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      .status-tag {
        margin-left: 0;
      }
    }

    .header-actions {
      margin-left: 12px;
      flex-shrink: 0;
    }
  }

  .card-content {
    .description {
      margin-bottom: 16px;

      p {
        margin: 0;
        color: #606266;
        line-height: 1.5;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
      }
    }

    .default-info {
      .info-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 8px;
        font-size: 14px;

        &:last-child {
          margin-bottom: 0;
        }

        .label {
          color: #909399;
          flex-shrink: 0;
        }

        .value {
          color: #606266;
          text-align: right;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
      }
    }
  }

  .card-footer {
    .footer-actions {
      display: flex;
      justify-content: flex-end;
      gap: 8px;
    }
  }
}
</style>
